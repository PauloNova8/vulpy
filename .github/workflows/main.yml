name: 🔐 Snyk Full Security Scan (Python)

on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]
  workflow_dispatch:

jobs:
  snyk-security:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      security-events: write

    steps:
      - name: 📥 Checkout código
        uses: actions/checkout@master

      - name: 🐍 Configurar Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: 📦 Instalar dependências Python
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: 🧰 Instalar Snyk CLI
        uses: snyk/actions/setup@v1

      - name: 🔐 Autenticar Snyk
        run: snyk auth ${{ secrets.SNYK_TOKEN }}

      - name: 📦 Snyk SCA - Dependências
        run: snyk test --file=requirements.txt --package-manager=pip
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}

      - name: 🧠 Snyk SAST - Código
        run: snyk code test
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}

      - name: 🐳 Build da imagem Docker
        run: docker build -t vulpy:latest .

      - name: 🐳 Snyk Container Scan
        uses: snyk/actions/docker@v1
        with:
          image: vulpy:latest
          args: test
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}

      - name: ⚙️ IaC Scan (Terraform)
        if: ${{ hashFiles('terraform/**.tf') != '' }}
        run: snyk iac test terraform/
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}

      - name: ☁️ Snyk Monitor
        run: |
          snyk monitor --file=requirements.txt --package-manager=pip
          snyk code monitor
          snyk container monitor vulpy:latest
          snyk iac monitor terraform/
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
